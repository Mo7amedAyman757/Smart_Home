/* 
 * File:   application.h
 * Author: LEGION
 *
 * Created on September 2, 2024, 2:20 PM
 */

#ifndef APPLICATION_H
#define	APPLICATION_H

/* Section : Includes */
#include "ECU_Layer/ecu_layer_init.h"
#include "MCAL_Layer/interrupt/external_interrupt.h"
#include "MCAL_Layer/eeprom/hal_eeprom.h"

/*Section : Macro Declaration*/


/*Section : Macro Function Declaration*/

/*Section : Data Type Declaration*/
extern led_t led1;
extern led_t led2;
extern led_t led3;
extern led_t led4;
//extern button_t btn1;
//extern button_t btn2;
//extern relay_t relay;
//extern motor_t motor1;
//extern motor_t motor2;
//extern segment_t seg;
//extern keypad_t keypad;
extern chr_lcd_4bit_t lcd_1;

uint8 program_selected = 0;
/*Section : Function Declaration*/
void application_initialize(void);
void interruptHandler(void);
void interruptHandler2(void);

void interruptHandlerHigh(void);
void interruptHandlerLow(void);

void APP_ISR(void);

interrupt_INTx_t int_obj0 = {
    .EXT_InterruptHandler = APP_ISR,
    .edge = INTERRUPT_RISING_EDGE,
    .source = INTERRUPT_EXTERNAL_INT0,
    .priority = INTERRUPT_HIGH_PRIORITY,
    .mcu_pin.port = PORTB_INDEX,
    .mcu_pin.pin = GPIO_PIN0,
    .mcu_pin.direction = GPIO_DIRECTION_INPUT,
    .mcu_pin.logic = GPIO_LOW,
};

//interrupt_INTx_t int_obj1 = {
//    .EXT_InterruptHandler = interruptHandler2,
//    .edge = INTERRUPT_RISING_EDGE,
//    .source = INTERRUPT_EXTERNAL_INT1,
//    .priority = INTERRUPT_HIGH_PRIORITY,
//    .mcu_pin.port = PORTB_INDEX,
//    .mcu_pin.pin = GPIO_PIN1,
//    .mcu_pin.direction = GPIO_DIRECTION_INPUT,
//    .mcu_pin.logic = GPIO_LOW,
//};

interrupt_RBx_t RB_obj4 = {
    .EXT_InterruptHandler_high = interruptHandlerHigh,
    .EXT_InterruptHandler_low = interruptHandlerLow,
    .source = INTERRUPT_EXTERNAL_RB4,
    .priority = INTERRUPT_HIGH_PRIORITY,
    .mcu_pin.port = PORTB_INDEX,
    .mcu_pin.pin = GPIO_PIN4,
    .mcu_pin.direction = GPIO_DIRECTION_INPUT,
    .mcu_pin.logic = GPIO_LOW,
};

//void interruptHandler(void) {
//    led_turn_on(&led1);
//    led_turn_off(&led2);
//}

//void interruptHandler2(void) {
//    led_turn_on(&led2);
//    led_turn_off(&led1);
//}

void APP_ISR(void) {
    program_selected++;
    data_EEPROM_WriteByte(0x3ff, program_selected);
}

void program_1(void) {
    led_turn_on(&led1);
    __delay_ms(250);
    led_turn_off(&led1);
    __delay_ms(250);
}

void program_2(void) {
    led_turn_on(&led2);
    __delay_ms(250);
    led_turn_off(&led2);
    __delay_ms(250);
}

void interruptHandlerHigh(void) {
    led_turn_on(&led3);
    led_turn_on(&led4);
}

void interruptHandlerLow(void) {
    led_turn_off(&led3);
    led_turn_off(&led4);
}
#endif	/* APPLICATION_H */

