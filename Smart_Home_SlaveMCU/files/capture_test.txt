/* 
 * File:   application.h
 * Author: LEGION
 *
 * Created on September 2, 2024, 2:20 PM
 */


#include "application.h"


STD_ReturnType ret = E_OK;

void ccp1_interrupthandler(void);
void timer3_interrupthandler(void);

uint32 CCP1_interrupt_flag = 0;
uint16 second_capture = 0;
uint32 Timer3_overflow = 0;
uint8 ccp1_second_capture_flag = 0;
uint32 Total_period_us = 0;
uint32 freq = 0;
ccp_t ccp_capture = {
    .ccp_inst = CCP1_INST,
    .CCP1_InterruptHandler = ccp1_interrupthandler,
    .ccp1_priority = INTERRUPT_LOW_PRIORITY,
    .ccp_mode = CCP_CAPTURE_SELECT,
    .ccp_mode_variant = CCP_CAPTURE_MODE_1_RISING_EDGE,
    .pin_cfg.port = PORTC_INDEX,
    .pin_cfg.pin = GPIO_PIN2,
    .pin_cfg.direction = GPIO_DIRECTION_OUTPUT,
    .ccp_capture_timer3 = CCP1_CCP2_TIMER3
};

timer3_t timer3 = {
    .timer3_InterruptHandler = timer3_interrupthandler,
    .priority = INTERRUPT_LOW_PRIORITY,
    .timer3_mode = TIMER3_TIMER_MODE_CFG,
    .preload_val = 0,
    .timer3_prescaler = TIMER3_PRESCALER_DIV_BY_1,
    .timer3_reg = TIMER3_RW_REG_8BIT_CFG,
};

void ccp1_interrupthandler(void) {
    CCP1_interrupt_flag++;
    ccp1_second_capture_flag++;
    if (CCP1_interrupt_flag == 1) {
        Timer3_Write_value(&timer3, 0);
    } else if (CCP1_interrupt_flag == 2) {
        CCP1_interrupt_flag = 0;

        CCP_CaptureDataRead(&ccp_capture, &second_capture);
    }
}

void timer3_interrupthandler(void) {
    Timer3_overflow++;
}

int main() {
    application_initialize();


    while (1) {

        if (ccp1_second_capture_flag == 2) {
            Total_period_us = (uint32) (((Timer3_overflow * 65536) + second_capture)*0.5);
            freq = (uint32) (1 / (Total_period_us / 1000000.0));
            Timer3_overflow = 0;
            ccp1_second_capture_flag = 0;

        }

    }
}

void application_initialize(void) {
    ecu_layer_initialize();
    CCP_Init(&ccp_capture);
    Timer3_Init(&timer3);
}


